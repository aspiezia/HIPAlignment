from CondCore.DBCommon.CondDBSetup_cfi import *

# loading magnetic field and geometry
process.load("Configuration.StandardSequences.GeometryIdeal_cff")
process.load("Configuration.StandardSequences.MagneticField_cff")
from Geometry.CommonDetUnit.globalTrackingGeometry_cfi import *

#Tracker
from RecoTracker.GeometryESProducer.TrackerRecoGeometryESProducer_cfi import *

#Muon
from Geometry.MuonNumbering.muonNumberingInitialization_cfi import *
from RecoMuon.DetLayers.muonDetLayerGeometry_cfi import *

#  Alignment
from Geometry.TrackerGeometryBuilder.idealForDigiTrackerGeometry_cff import *
from Geometry.CSCGeometryBuilder.idealForDigiCscGeometry_cff import *
from Geometry.DTGeometryBuilder.idealForDigiDtGeometry_cff import *

# loading the alignment producer
process.load("Alignment.CommonAlignmentProducer.AlignmentProducer_cff")

# loading DB constants 
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")

if 'COSMICS'=='<FLAG>':
   process.GlobalTag.globaltag='POSTLS170_V6::All'
else :
   process.GlobalTag.globaltag='POSTLS170_V6::All'
 
process.load("FWCore.MessageService.MessageLogger_cfi")
process.MessageLogger.cerr.FwkReport.reportEvery = 10000

# configure the database file - use survey one for default
from CondCore.DBCommon.CondDBSetup_cfi import *

# for global tag geometry 
process.GlobalTag.toGet = cms.VPSet(
   cms.PSet(record = cms.string('TrackerAlignmentRcd'),
            tag = cms.string('TrackerAlignment_2015StartupPessimisticScenario_mc'),
            connect = cms.untracked.string('frontier://FrontierProd/CMS_COND_31X_ALIGNMENT')
            ),
   cms.PSet(record = cms.string('TrackerSurfaceDeformationRcd'),
            tag = cms.string('TrackerSurfaceDeformations_2011Realistic_v2_mc'),
            connect = cms.untracked.string('frontier://FrontierProd/CMS_COND_310X_ALIGN')
            ),
   cms.PSet(record = cms.string('TrackerAlignmentErrorRcd'),
            tag = cms.string('TrackerAlignmentErrors_2015StartupPessimisticScenario_mc'),
            connect = cms.untracked.string('frontier://FrontierProd/CMS_COND_31X_ALIGNMENT')
            ),
   )

process.load("RecoTracker.MeasurementDet.MeasurementTrackerEventProducer_cfi") 
process.MeasurementTrackerEvent.pixelClusterProducer = 'ALCARECOTkAlMinBias'
process.MeasurementTrackerEvent.stripClusterProducer = 'ALCARECOTkAlMinBias'
process.MeasurementTrackerEvent.inactivePixelDetectorLabels = cms.VInputTag()
process.MeasurementTrackerEvent.inactiveStripDetectorLabels = cms.VInputTag()

process.AlignmentProducer.applyDbAlignment = True
### Set parameters to align (all modules in this example)
process.AlignmentProducer.ParameterBuilder.Selector = cms.PSet(
                                                    alignParams = cms.vstring(
								 'TrackerTPBModule,111111',
								 'TrackerTPEModule,111111',
								 'TrackerTIBModuleUnit,101111',
								 'TrackerTOBModuleUnit,101111',
								 'TrackerTIDModuleUnit,101111',
								 'TrackerTECModuleUnit,101111',
                                                                 ),
)

